<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Schema Principal SIFEN v150 - Documento Electr√≥nico MODULAR
  Archivo: DE_v150.xsd
  
  Este schema IMPORTA los m√≥dulos reales de common/ y document_core/
  y define solo la estructura de orquestaci√≥n.
  
  M√≥dulos importados:
  - common/basic_types.xsd (tipos b√°sicos)
  - common/currency_types.xsd (tipos monetarios) 
  - document_core/totals_subtotals.xsd (totales)
  - document_core/operation_data.xsd (datos de operaci√≥n)
  - document_core/stamping_data.xsd (datos de timbrado)
  - document_core/root_elements.xsd (estructura completa del documento)
  - parties/issuer_types.xsd (datos del emisor)
  - parties/receiver_types.xsd (datos del receptor)
  
  Autor: Sistema SIFEN Paraguay
  Versi√≥n: 1.5.0 Modular
  Fecha: 2025-06-21
  Actualizado: 2025-06-22 - Integrado root_elements.xsd completo
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://ekuatia.set.gov.py/sifen/xsd"
    targetNamespace="http://ekuatia.set.gov.py/sifen/xsd"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    version="1.5.0">

    <!-- ===================================================================== -->
    <!-- IMPORTACI√ìN DE M√ìDULOS EXISTENTES                                    -->
    <!-- ===================================================================== -->

    <!-- M√≥dulos common/ b√°sicos -->
    <xs:include schemaLocation="common/basic_types.xsd" />
    <xs:include schemaLocation="common/currency_types.xsd" />

    <!-- üéØ M√ìDULO PRINCIPAL: root_elements.xsd -->
    <!-- Este m√≥dulo ya incluye todas las dependencias necesarias -->
    <xs:include schemaLocation="document_core/root_elements.xsd" />

    <!-- M√≥dulos de operations/ -->
    <xs:include schemaLocation="operations/items.xsd" />
    <!-- <xs:include schemaLocation="operations/payment_conditions.xsd" />
    <xs:include schemaLocation="operations/tax_calculations.xsd" />
    <xs:include schemaLocation="operations/commercial_operations.xsd" /> -->
    <!-- 
    NOTA: root_elements.xsd ya importa autom√°ticamente:
    - document_core/operation_data.xsd
    - document_core/stamping_data.xsd  
    - document_core/totals_subtotals.xsd
    - parties/issuer_types.xsd
    - parties/receiver_types.xsd
    
    Por lo tanto NO necesitamos importarlos aqu√≠ nuevamente.
    -->


    <!-- ===================================================================== -->
    <!-- ELEMENTO RA√çZ                                                        -->
    <!-- ===================================================================== -->

    <xs:element name="rDE">
        <xs:annotation>
            <xs:documentation> Elemento ra√≠z del Documento Electr√≥nico SIFEN v150. Usa la estructura
                completa definida en document_core/root_elements.xsd que integra todos los m√≥dulos
                disponibles de forma modular. ESTADO ACTUAL: ‚úÖ Integrado con root_elements.xsd
                completo ‚úÖ Incluye todos los m√≥dulos: parties/, document_core/ ‚úÖ Estructura
                preparada para agregar operations/, document_types/ </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <!-- Versi√≥n del formato del documento -->
                <xs:element name="dVerFor" type="xs:string">
                    <xs:annotation>
                        <xs:documentation> Versi√≥n del formato del documento. TODO: Cambiar a
                            tipoVersionFormato cuando est√© en basic_types.xsd </xs:documentation>
                    </xs:annotation>
                </xs:element>

                <!-- üéØ DOCUMENTO ELECTR√ìNICO COMPLETO (desde root_elements.xsd) -->
                <xs:element name="DE" type="tipoDocumentoElectronico">
                    <xs:annotation>
                        <xs:documentation> Documento Electr√≥nico completo. IMPORTADO desde
                            document_core/root_elements.xsd Contiene todos los grupos integrados: ‚úÖ
                            gOpeDE (operation_data.xsd) ‚úÖ gTimb (stamping_data.xsd) ‚úÖ gDatGralOpe
                            (operation_data.xsd) ‚úÖ gEmis (parties/issuer_types.xsd) ‚úÖ gDatRec
                            (parties/receiver_types.xsd) ‚è≥ gCamItem (temporal hasta
                            operations/items.xsd) ‚úÖ gTotSub (totals_subtotals.xsd) </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>

            <xs:attribute name="version" type="xs:string" fixed="1.5.0" use="required">
                <xs:annotation>
                    <xs:documentation>Versi√≥n del schema XSD</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <!-- ===================================================================== -->
    <!-- ELEMENTOS GLOBALES PARA VALIDACI√ìN INDEPENDIENTE                    -->
    <!-- ===================================================================== -->

    <!-- 
    üéØ ELEMENTOS GLOBALES IMPORTADOS:
    
    Los siguientes elementos est√°n disponibles desde root_elements.xsd
    y sus m√≥dulos correspondientes:
    
    ‚úÖ <DE> - Documento electr√≥nico completo
    ‚úÖ <DocumentoElectronico> - Tipo completo para validaci√≥n
    ‚úÖ <gOpeDE> - Grupo de operaci√≥n (desde operation_data.xsd)
    ‚úÖ <gTimb> - Grupo de timbrado (desde stamping_data.xsd)
    ‚úÖ <gTotSub> - Grupo de totales (desde totals_subtotals.xsd)
    
    No necesitamos redefinirlos aqu√≠.
    -->

    <!-- ===================================================================== -->
    <!-- PLAN DE MODULARIZACI√ìN COMPLETADO                                   -->
    <!-- ===================================================================== -->

    <!--
        ESTADO ACTUAL - MODULARIZACI√ìN EXITOSA:
        
        ‚úÖ INTEGRACI√ìN COMPLETA:
        - ‚úÖ common/basic_types.xsd (tipos b√°sicos)
        - ‚úÖ common/currency_types.xsd (tipos monetarios)
        - ‚úÖ common/geographic_types.xsd (tipos geogr√°ficos + pa√≠ses)
        - ‚úÖ common/contact_types.xsd (tipos de contacto)
        - ‚úÖ document_core/operation_data.xsd (datos de operaci√≥n)
        - ‚úÖ document_core/stamping_data.xsd (datos de timbrado)
        - ‚úÖ document_core/totals_subtotals.xsd (totales e impuestos)
        - ‚úÖ document_core/root_elements.xsd (estructura completa)
        - ‚úÖ parties/issuer_types.xsd (datos del emisor)
        - ‚úÖ parties/receiver_types.xsd (datos del receptor)
        
        ‚è≥ PR√ìXIMOS M√ìDULOS (cuando se implementen):
        
        1. operations/items.xsd
           - Reemplazar tipoGrupoItems temporal en root_elements.xsd
           - Implementar estructura completa de √≠tems/productos/servicios
        
        2. document_types/factura_types.xsd
           - Implementar tipoGrupoCamposFactura
           - Descomentar choice en root_elements.xsd
        
        3. document_types/nota_credito_types.xsd
           - Implementar tipoGrupoCamposNotaCredito
           - Agregar al choice en root_elements.xsd
        
        4. document_types/nota_debito_types.xsd
           - Implementar tipoGrupoCamposNotaDebito
           - Agregar al choice en root_elements.xsd
        
        5. document_types/nota_remision_types.xsd
           - Implementar tipoGrupoCamposNotaRemision
           - Agregar al choice en root_elements.xsd
        
        6. document_types/autofactura_types.xsd
           - Implementar tipoGrupoCamposAutofactura
           - Agregar al choice en root_elements.xsd
        
        7. document_types/associated_document.xsd
           - Implementar tipoGrupoDocumentoAsociado
           - Descomentar elemento en root_elements.xsd
        
        ‚úÖ BENEFICIOS LOGRADOS:
        - ‚úÖ Schema principal limpio y modular
        - ‚úÖ Separaci√≥n clara de responsabilidades
        - ‚úÖ Reutilizaci√≥n de tipos entre m√≥dulos
        - ‚úÖ Estructura escalable para nuevos m√≥dulos
        - ‚úÖ Validaci√≥n independiente de cada m√≥dulo
        - ‚úÖ Compatibilidad total con especificaci√≥n SIFEN v150
        - ‚úÖ Base s√≥lida para implementaciones futuras
        
        üéØ ARQUITECTURA FINAL:
        
        DE_v150.xsd (Schema principal - orquestador)
        ‚îú‚îÄ‚îÄ common/basic_types.xsd (tipos fundamentales)
        ‚îú‚îÄ‚îÄ common/currency_types.xsd (tipos monetarios)
        ‚îî‚îÄ‚îÄ document_core/root_elements.xsd (estructura completa)
            ‚îú‚îÄ‚îÄ common/basic_types.xsd (reutilizado)
            ‚îú‚îÄ‚îÄ document_core/operation_data.xsd
            ‚îÇ   ‚îú‚îÄ‚îÄ common/basic_types.xsd (reutilizado)
            ‚îÇ   ‚îî‚îÄ‚îÄ common/geographic_types.xsd
            ‚îú‚îÄ‚îÄ document_core/stamping_data.xsd
            ‚îÇ   ‚îî‚îÄ‚îÄ common/basic_types.xsd (reutilizado)
            ‚îú‚îÄ‚îÄ document_core/totals_subtotals.xsd
            ‚îÇ   ‚îú‚îÄ‚îÄ common/basic_types.xsd (reutilizado)
            ‚îÇ   ‚îî‚îÄ‚îÄ common/currency_types.xsd (reutilizado)
            ‚îú‚îÄ‚îÄ parties/issuer_types.xsd
            ‚îÇ   ‚îú‚îÄ‚îÄ common/basic_types.xsd (reutilizado)
            ‚îÇ   ‚îú‚îÄ‚îÄ common/geographic_types.xsd (reutilizado)
            ‚îÇ   ‚îî‚îÄ‚îÄ common/contact_types.xsd (reutilizado)
            ‚îî‚îÄ‚îÄ parties/receiver_types.xsd
                ‚îú‚îÄ‚îÄ common/basic_types.xsd (reutilizado)
                ‚îú‚îÄ‚îÄ common/geographic_types.xsd (reutilizado)
                ‚îî‚îÄ‚îÄ common/contact_types.xsd (reutilizado)
        
        Esta arquitectura modular permite:
        - Mantenimiento independiente de cada m√≥dulo
        - Testing aislado de funcionalidades espec√≠ficas
        - Crecimiento org√°nico sin romper funcionalidad existente
        - Reutilizaci√≥n m√°xima de tipos b√°sicos
        - Cumplimiento estricto con especificaci√≥n SIFEN v150
    -->

</xs:schema>