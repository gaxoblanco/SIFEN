<?xml version="1.0" encoding="UTF-8"?>
<!--
    ========================================================================
    SIFEN Paraguay - Sistema Integrado de Facturaci√≥n Electr√≥nica Nacional
    ========================================================================
    
    Schema: resResultLoteDE_v150.xsd
    Versi√≥n: 1.50 (Septiembre 2019)
    
    Prop√≥sito:
    - Define la estructura de respuesta para consultas de resultados de lotes
    - Contiene el estado final del procesamiento del lote completo
    - Incluye resultados individuales de cada documento en el lote
    - Schema m√°s complejo del sistema de lotes SIFEN
    
    Namespace: http://ekuatia.set.gov.py/sifen/xsd
    Encoding: UTF-8
    
    Complejidad:
    - Informaci√≥n de lote (metadatos generales)
    - Resultados por documento (1-50 elementos individuales)
    - Estados m√∫ltiples (lote + documentos individuales)
    - C√≥digos de error espec√≠ficos por documento
    - Protocolos individuales de autorizaci√≥n
    
    Estados del Lote:
    - 0360: En procesamiento (seguir consultando)
    - 0361: Finalizado con errores (algunos docs rechazados)
    - 0362: Finalizado exitosamente (todos docs aprobados)
    
    Estados de Documentos:
    - "Aprobado": Documento autorizado (c√≥digo 0260)
    - "Aprobado con Observaci√≥n": Autorizado con observaciones (c√≥digo 1005)
    - "Rechazado": Documento no v√°lido (c√≥digos 1000-4999)
    
    Uso:
    - Web Service: /de/ws/consultas/consulta-lote.wsdl
    - M√©todo: SiResultLoteDE
    - Tipo: Response (Respuesta de consulta)
    
    ========================================================================
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://ekuatia.set.gov.py/sifen/xsd"
    xmlns="http://ekuatia.set.gov.py/sifen/xsd"
    xmlns:tns="http://ekuatia.set.gov.py/sifen/xsd"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    version="150">

    <!--
        ================================================================
        ELEMENTO RA√çZ - RESPUESTA DE CONSULTA DE RESULTADOS
        ================================================================
    -->

    <xs:element name="rResEnviConsLoteDe" type="tResEnviConsLoteDe">
        <xs:annotation>
            <xs:documentation> Elemento ra√≠z para la respuesta de consulta de resultados de lote.
                ESTRUCTURA JER√ÅRQUICA: rResEnviConsLoteDe (Ra√≠z) ‚îú‚îÄ‚îÄ dFecProc (Timestamp
                procesamiento) ‚îú‚îÄ‚îÄ dCodResLot (C√≥digo estado lote) ‚îú‚îÄ‚îÄ dMsgResLot (Mensaje estado
                lote) ‚îî‚îÄ‚îÄ gResProcLote (0-50) (Resultados individuales) ‚îú‚îÄ‚îÄ id (CDC documento) ‚îú‚îÄ‚îÄ
                dEstRes (Estado documento) ‚îú‚îÄ‚îÄ dProtAut (opcional) (Protocolo autorizaci√≥n) ‚îî‚îÄ‚îÄ
                gResProc (Informaci√≥n procesamiento) ‚îú‚îÄ‚îÄ dCodRes (C√≥digo resultado doc) ‚îî‚îÄ‚îÄ dMsgRes
                (Mensaje resultado doc) CASOS DE USO: 1. LOTE EN PROCESAMIENTO (0360): - dCodResLot
                = "0360" - dMsgResLot = "Lote en procesamiento" - gResProcLote = VAC√çO (sin
                resultados a√∫n) - Acci√≥n: Esperar y consultar nuevamente 2. LOTE PROCESADO
                EXITOSAMENTE (0362): - dCodResLot = "0362" - dMsgResLot = "Procesamiento finalizado
                exitosamente" - gResProcLote = 1-50 elementos con TODOS los docs "Aprobado" -
                Acci√≥n: Procesar resultados y finalizar 3. LOTE PROCESADO CON ERRORES (0361): -
                dCodResLot = "0361" - dMsgResLot = "Procesamiento finalizado con errores" -
                gResProcLote = 1-50 elementos con ALGUNOS docs "Rechazado" - Acci√≥n: Procesar
                resultados mixtos y manejar errores VALIDACIONES CR√çTICAS: ‚úÖ El n√∫mero de elementos
                gResProcLote debe coincidir con documentos enviados ‚úÖ Cada CDC debe corresponderse
                con un documento del lote original ‚úÖ Estados de documentos deben ser consistentes
                con c√≥digo de lote ‚úÖ Protocolos solo presentes en documentos aprobados </xs:documentation>
        </xs:annotation>
    </xs:element>

    <!--
        ================================================================
        TIPO PRINCIPAL - ESTRUCTURA COMPLETA DE LA RESPUESTA
        ================================================================
    -->

    <xs:complexType name="tResEnviConsLoteDe">
        <xs:annotation>
            <xs:documentation> Tipo principal que define la estructura completa de la respuesta.
                Combina informaci√≥n del lote general con resultados espec√≠ficos por documento. </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <!-- Fecha y hora de procesamiento -->
            <xs:element name="dFecProc" type="tFechaProcesamiento">
                <xs:annotation>
                    <xs:documentation> Fecha y hora de finalizaci√≥n del procesamiento por SIFEN.
                        DIFERENCIA CON OTROS TIMESTAMPS: - dFecEnvio (request): Timestamp cliente al
                        enviar lote - dFecProc (recepci√≥n): Timestamp al confirmar recepci√≥n -
                        dFecProc (resultados): Timestamp al finalizar procesamiento ‚Üê ESTE
                        INTERPRETACI√ìN POR ESTADO: Estado 0360 (En procesamiento): - Timestamp de la
                        consulta actual - NO es timestamp de finalizaci√≥n - Se actualiza en cada
                        consulta Estado 0361/0362 (Finalizado): - Timestamp real de finalizaci√≥n del
                        procesamiento - Es fijo y no cambia en consultas posteriores - Representa
                        momento de decisi√≥n final sobre documentos C√ÅLCULOS DE PERFORMANCE: - Tiempo
                        de procesamiento = dFecProc (aqu√≠) - dFecProc (recepci√≥n) - SLA objetivo:
                        (manos de) 15 minutos para lotes normales - SLA cr√≠tico: (mas de) 20 minutos
                        para lotes complejos Ejemplo: 2024-12-20T14:45:00 (15 minutos despu√©s de
                        recepci√≥n exitosa) </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- C√≥digo de resultado del lote -->
            <xs:element name="dCodResLot" type="tCodigoResultadoLote">
                <xs:annotation>
                    <xs:documentation> C√≥digo que indica el estado final del procesamiento del lote.
                        C√ìDIGOS OFICIALES DEL LOTE: üîÑ 0360: "Lote en procesamiento" - Descripci√≥n:
                        SIFEN est√° validando documentos individuales - Tiempo t√≠pico: 3-15 minutos
                        desde recepci√≥n - Documentos: Sin procesar a√∫n (gResProcLote vac√≠o) -
                        Acci√≥n: Continuar consultando cada 2-3 minutos - Retry: Hasta 20 minutos
                        m√°ximo, luego escalar ‚ö†Ô∏è 0361: "Procesamiento finalizado con errores" -
                        Descripci√≥n: Algunos documentos fueron rechazados - Documentos: Mezcla de
                        "Aprobado" y "Rechazado" - Resultado final: PARCIALMENTE EXITOSO - Acci√≥n:
                        Procesar documentos aprobados y manejar rechazados - Business logic:
                        Determinar si continuar o cancelar operaci√≥n ‚úÖ 0362: "Procesamiento
                        finalizado exitosamente" - Descripci√≥n: TODOS los documentos fueron
                        aprobados - Documentos: Todos con estado "Aprobado" o "Aprobado con
                        Observaci√≥n" - Resultado final: COMPLETAMENTE EXITOSO - Acci√≥n: Procesar
                        resultados y confirmar operaci√≥n completa L√ìGICA DE TRANSICI√ìN DE ESTADOS:
                        Env√≠o ‚Üí 0300 (Recibido) ‚Üí 0360 (Procesando) ‚Üí 0361/0362 (Final) ‚Üì ‚Üì ‚Üì ‚Üì
                        Validaci√≥n Encolado Procesamiento Resultado inicial exitoso individual final
                        MANEJO EN APLICACIONES: ```python def procesar_resultado_lote(response):
                        codigo = response.dCodResLot if codigo == "0360": # SEGUIR CONSULTANDO
                        return {"status": "processing", "action": "retry"} elif codigo == "0361": #
                        PROCESAMIENTO MIXTO aprobados = [d for d in response.gResProcLote if
                        d.dEstRes == "Aprobado"] rechazados = [d for d in response.gResProcLote if
                        d.dEstRes == "Rechazado"] return { "status": "partial_success", "approved":
                        len(aprobados), "rejected": len(rechazados), "action":
                        "process_mixed_results" } elif codigo == "0362": # PROCESAMIENTO EXITOSO
                        return { "status": "success", "approved": len(response.gResProcLote),
                        "action": "process_success" } else: # C√ìDIGO DESCONOCIDO return {"status":
                        "unknown", "action": "escalate"} ``` </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- Mensaje descriptivo del lote -->
            <xs:element name="dMsgResLot" type="tMensajeResultadoLote">
                <xs:annotation>
                    <xs:documentation> Mensaje descriptivo en espa√±ol del estado del lote. MENSAJES
                        EST√ÅNDAR POR C√ìDIGO: 0360: "Lote en procesamiento" - Alternativas:
                        "Procesando documentos del lote" - Contexto: Procesamiento as√≠ncrono en
                        curso 0361: "Procesamiento finalizado con errores" - Alternativas: "Lote
                        procesado con documentos rechazados" - Contexto: Resultado mixto, requiere
                        an√°lisis detallado 0362: "Procesamiento finalizado exitosamente" -
                        Alternativas: "Lote procesado correctamente" - Contexto: Resultado
                        completamente exitoso MENSAJES CON INFORMACI√ìN ADICIONAL: - "Procesamiento
                        finalizado con errores: 3 de 10 documentos rechazados" - "Lote en
                        procesamiento: 7 de 10 documentos procesados" - "Procesamiento finalizado
                        exitosamente: 50 documentos aprobados" USO RECOMENDADO: ‚úÖ Mostrar al usuario
                        final para contexto ‚úÖ Incluir en logs para debugging humano ‚úÖ Usar para
                        reportes y dashboards ‚ùå No usar para l√≥gica condicional (usar dCodResLot) ‚ùå
                        No parsear program√°ticamente (formato puede variar) INTERNACIONALIZACI√ìN: -
                        Idioma: Espa√±ol (Paraguay) - Encoding: UTF-8 - Caracteres especiales:
                        Permitidos (acentos, √±) - Longitud: Variable, m√°ximo 500 caracteres </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- Resultados individuales por documento -->
            <xs:element name="gResProcLote" type="tResultadoDocumento"
                minOccurs="0" maxOccurs="50">
                <xs:annotation>
                    <xs:documentation> Resultados individuales de procesamiento para cada documento
                        del lote. CARDINALIDAD SEG√öN ESTADO: Estado 0360 (En procesamiento): -
                        minOccurs="0": Sin resultados a√∫n - Elemento no presente o array vac√≠o -
                        SIFEN a√∫n procesando documentos Estado 0361/0362 (Finalizado): -
                        minOccurs="1": Al menos un resultado - maxOccurs="50": M√°ximo 50 documentos
                        - Debe coincidir con cantidad enviada originalmente ORDEN DE ELEMENTOS: -
                        Mismo orden que en el lote original enviado - Posici√≥n 1 = primer documento
                        del lote - Posici√≥n N = N-√©simo documento del lote - Usar para correlacionar
                        con env√≠o original CONSISTENCIA DE DATOS: ‚úÖ Cada elemento debe corresponder
                        a un documento enviado ‚úÖ CDC debe coincidir con el generado originalmente ‚úÖ
                        Total de elementos = total de documentos del lote ‚úÖ No debe haber elementos
                        duplicados o faltantes INFORMACI√ìN POR DOCUMENTO: Cada elemento gResProcLote
                        contiene: 1. id (CDC): Identificador √∫nico del documento 2. dEstRes: Estado
                        final ("Aprobado", "Rechazado", etc.) 3. dProtAut: N√∫mero de autorizaci√≥n
                        (solo si aprobado) 4. gResProc: Detalles del procesamiento (c√≥digo y
                        mensaje) CASOS ESPECIALES: Documento Aprobado: - dEstRes = "Aprobado" -
                        dProtAut = presente (n√∫mero de 10 d√≠gitos) - gResProc.dCodRes = "0260" -
                        gResProc.dMsgRes = "Autorizaci√≥n del DE satisfactoria" Documento con
                        Observaci√≥n: - dEstRes = "Aprobado con Observaci√≥n" - dProtAut = presente
                        (documento autorizado) - gResProc.dCodRes = "1005" (transmisi√≥n
                        extempor√°nea) - gResProc.dMsgRes = "Transmisi√≥n extempor√°nea del DE"
                        Documento Rechazado: - dEstRes = "Rechazado" - dProtAut = ausente (no hay
                        autorizaci√≥n) - gResProc.dCodRes = c√≥digos 1000-4999 - gResProc.dMsgRes =
                        descripci√≥n espec√≠fica del error PROCESAMIENTO EN APLICACIONES: ```python
                        def procesar_documentos_individuales(resultados): estadisticas = {
                        "aprobados": 0, "aprobados_observacion": 0, "rechazados": 0, "protocolos":
                        [], "errores": [] } for doc in resultados: cdc = doc.id estado = doc.dEstRes
                        protocolo = getattr(doc, 'dProtAut', None) codigo = doc.gResProc.dCodRes
                        mensaje = doc.gResProc.dMsgRes if estado == "Aprobado":
                        estadisticas["aprobados"] += 1 estadisticas["protocolos"].append(protocolo)
                        elif estado == "Aprobado con Observaci√≥n":
                        estadisticas["aprobados_observacion"] += 1
                        estadisticas["protocolos"].append(protocolo) elif estado == "Rechazado":
                        estadisticas["rechazados"] += 1 estadisticas["errores"].append({ "cdc": cdc,
                        "codigo": codigo, "mensaje": mensaje }) return estadisticas ``` </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!--
        ================================================================
        RESULTADO INDIVIDUAL POR DOCUMENTO
        ================================================================
    -->

    <xs:complexType name="tResultadoDocumento">
        <xs:annotation>
            <xs:documentation> Resultado individual del procesamiento de un documento electr√≥nico.
                Contiene toda la informaci√≥n necesaria para determinar el estado final de cada
                documento. </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <!-- CDC del documento -->
            <xs:element name="id" type="tCDCDocumento">
                <xs:annotation>
                    <xs:documentation> C√≥digo de Control del Documento (CDC) de 44 d√≠gitos. FORMATO
                        Y ESTRUCTURA DEL CDC: Posiciones 1-8: RUC del emisor (sin DV) Posici√≥n 9:
                        D√≠gito verificador del RUC Posiciones 10-12: C√≥digo del establecimiento
                        Posiciones 13-15: C√≥digo del punto de expedici√≥n Posiciones 16-18: N√∫mero de
                        timbrado Posiciones 19-25: N√∫mero del documento Posici√≥n 26: Tipo de
                        documento electr√≥nico Posiciones 27-30: Fecha de emisi√≥n (AAAA) Posiciones
                        31-32: Fecha de emisi√≥n (MM) Posiciones 33-34: Fecha de emisi√≥n (DD)
                        Posiciones 35-36: Tipo de emisi√≥n Posiciones 37-44: C√≥digo de seguridad
                        VALIDACIONES DEL CDC: ‚úÖ Exactamente 44 d√≠gitos num√©ricos ‚úÖ Sin espacios,
                        guiones o caracteres especiales ‚úÖ Algoritmo de generaci√≥n v√°lido ‚úÖ RUC
                        emisor v√°lido (posiciones 1-9) ‚úÖ Fecha v√°lida (posiciones 27-34) ‚úÖ Tipo de
                        documento v√°lido (posici√≥n 26) CORRELACI√ìN CON LOTE ORIGINAL: - Debe
                        coincidir exactamente con CDC del documento enviado - Usado para identificar
                        documento espec√≠fico dentro del lote - Mantener orden para correlacionar con
                        posici√≥n en lote - Verificar que no haya CDCs duplicados o faltantes CASOS
                        DE USO: 1. Correlaci√≥n: Asociar resultado con documento original 2.
                        Auditor√≠a: Trazabilidad completa del procesamiento 3. Reenv√≠o: Identificar
                        documentos rechazados para correcci√≥n 4. Reportes: An√°lisis de √©xito/falla
                        por documento 5. Integraci√≥n: Actualizar estados en sistemas internos MANEJO
                        DE ERRORES: - CDC no reconocido: Verificar env√≠o original - CDC duplicado:
                        Error en generaci√≥n, revisar algoritmo - CDC faltante: Verificar integridad
                        del lote Ejemplo: 12345678901200100000001100120241220010001 </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- Estado del resultado -->
            <xs:element name="dEstRes" type="tEstadoResultado">
                <xs:annotation>
                    <xs:documentation> Estado final del procesamiento del documento individual.
                        ESTADOS OFICIALES SEG√öN SIFEN: ‚úÖ "Aprobado" - Documento completamente v√°lido
                        y autorizado - C√≥digo asociado: 0260 (Autorizaci√≥n del DE satisfactoria) -
                        Protocolo: Presente (dProtAut con 10 d√≠gitos) - Acci√≥n: Documento v√°lido
                        para uso comercial/legal - Efectos: V√°lido para deducci√≥n fiscal, archivo,
                        etc. ‚ö†Ô∏è "Aprobado con Observaci√≥n" - Documento autorizado pero con
                        advertencias menores - C√≥digo t√≠pico: 1005 (Transmisi√≥n extempor√°nea del DE)
                        - Protocolo: Presente (documento autorizado) - Observaciones comunes: *
                        Enviado fuera del plazo de 72 horas * Problemas menores de formato (no
                        cr√≠ticos) * Advertencias sobre datos opcionales - Acci√≥n: Documento v√°lido,
                        revisar observaciones ‚ùå "Rechazado" - Documento no v√°lido, no autorizado -
                        C√≥digos: 1000-4999 (diversos errores) - Protocolo: Ausente (sin dProtAut) -
                        Errores comunes: * 1000: CDC no correspondiente con XML * 1001: CDC
                        duplicado * 1002: Error en datos obligatorios * 2xxx: Errores de validaci√≥n
                        de negocio * 3xxx: Errores de c√°lculos matem√°ticos * 4xxx: Errores de
                        c√≥digos de cat√°logo - Acci√≥n: Corregir errores y reenviar ESTADOS
                        ADICIONALES (seg√∫n contexto): üö´ "Cancelado" - Documento cancelado por
                        evento posterior - Requiere procesamiento de evento de cancelaci√≥n - No
                        t√≠pico en respuestas de lote inicial ‚ö™ "Anulado" - Documento anulado por
                        evento posterior - Requiere procesamiento de evento de anulaci√≥n - No t√≠pico
                        en respuestas de lote inicial DISTRIBUCI√ìN ESTAD√çSTICA T√çPICA: - Aprobado:
                        85-95% (operaci√≥n normal) - Aprobado con Observaci√≥n: 2-5% (principalmente
                        extempor√°neos) - Rechazado: 5-10% (errores diversos) L√ìGICA DE NEGOCIO POR
                        ESTADO: ```python def procesar_estado_documento(estado, codigo, protocolo):
                        if estado == "Aprobado": # Documento completamente v√°lido return { "valido":
                        True, "autorizado": True, "protocolo": protocolo, "accion":
                        "archivar_y_usar" } elif estado == "Aprobado con Observaci√≥n": # V√°lido pero
                        con advertencias return { "valido": True, "autorizado": True, "protocolo":
                        protocolo, "accion": "revisar_observaciones" } elif estado == "Rechazado": #
                        No v√°lido, requiere correcci√≥n return { "valido": False, "autorizado":
                        False, "protocolo": None, "accion": "corregir_y_reenviar" } ``` </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- Protocolo de autorizaci√≥n (opcional) -->
            <xs:element name="dProtAut" type="tProtocoloAutorizacion" minOccurs="0">
                <xs:annotation>
                    <xs:documentation> N√∫mero de protocolo de autorizaci√≥n del documento individual.
                        PRESENCIA SEG√öN ESTADO: ‚úÖ PRESENTE cuando dEstRes = "Aprobado" ‚úÖ PRESENTE
                        cuando dEstRes = "Aprobado con Observaci√≥n" ‚ùå AUSENTE cuando dEstRes =
                        "Rechazado" ‚ùå AUSENTE cuando dEstRes = "Cancelado" o "Anulado"
                        CARACTER√çSTICAS DEL PROTOCOLO: - Formato: 10 d√≠gitos num√©ricos exactos -
                        √önico a nivel nacional por SIFEN - Inmutable durante vida del documento -
                        Referencia oficial para el documento autorizado ESTRUCTURA (informativa):
                        Posiciones 1-4: A√±o de autorizaci√≥n Posiciones 5-7: D√≠a del a√±o (001-366)
                        Posiciones 8-10: Secuencial del d√≠a Ejemplo: 2024355001 - 2024: A√±o 2024 -
                        355: D√≠a 355 del a√±o (21 de diciembre) - 001: Primer documento del d√≠a USOS
                        DEL PROTOCOLO: 1. **Referencia legal**: N√∫mero oficial del documento 2.
                        **Auditor√≠a**: Trazabilidad en sistemas SET 3. **Consultas**: Buscar
                        documento espec√≠fico 4. **Impresi√≥n**: Incluir en representaci√≥n gr√°fica 5.
                        **Archivo**: Identificador para gesti√≥n documental 6. **Integraci√≥n**:
                        Sincronizar con sistemas ERP/contables VALIDACIONES CR√çTICAS: ‚úÖ Solo
                        presente en documentos aprobados ‚úÖ Exactamente 10 d√≠gitos num√©ricos ‚úÖ No
                        puede ser todo ceros: 0000000000 ‚úÖ Debe ser √∫nico por documento ‚úÖ Inmutable
                        una vez asignado ALGORITMO DE VALIDACI√ìN: ```python def
                        validar_protocolo_autorizacion(protocolo, estado): if estado in ["Aprobado",
                        "Aprobado con Observaci√≥n"]: if not protocolo: raise ValueError("Protocolo
                        requerido para documento aprobado") if len(protocolo) != 10: raise
                        ValueError("Protocolo debe tener 10 d√≠gitos") if not protocolo.isdigit():
                        raise ValueError("Protocolo debe ser num√©rico") if protocolo ==
                        "0000000000": raise ValueError("Protocolo no puede ser todo ceros") elif
                        estado == "Rechazado": if protocolo: raise ValueError("Protocolo no debe
                        estar presente en documento rechazado") return True ``` INTEGRACI√ìN CON
                        SISTEMAS: - Almacenar como string (no como n√∫mero) - Indexar para b√∫squedas
                        r√°pidas - Incluir en logs de transacciones - Referenciar en facturas
                        impresas - Usar para consultas de estado </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- Informaci√≥n de procesamiento -->
            <xs:element name="gResProc" type="tInformacionProcesamiento">
                <xs:annotation>
                    <xs:documentation> Informaci√≥n detallada del procesamiento del documento
                        individual. CONTENIDO: - dCodRes: C√≥digo espec√≠fico del resultado del
                        documento - dMsgRes: Mensaje descriptivo del resultado DIFERENCIA CON
                        INFORMACI√ìN DEL LOTE: - Lote: dCodResLot (estado general del lote) -
                        Documento: dCodRes (estado espec√≠fico del documento) RELACI√ìN CON ESTADO: -
                        dEstRes = interpretaci√≥n legible ("Aprobado", "Rechazado") - dCodRes =
                        c√≥digo t√©cnico espec√≠fico (0260, 1005, etc.) - dMsgRes = explicaci√≥n
                        detallada t√©cnica USO RECOMENDADO: - dEstRes: Para l√≥gica de negocio y UI -
                        dCodRes: Para manejo de errores espec√≠ficos - dMsgRes: Para logs t√©cnicos y
                        debugging </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!--
        ================================================================
        INFORMACI√ìN DETALLADA DE PROCESAMIENTO
        ================================================================
    -->

    <xs:complexType name="tInformacionProcesamiento">
        <xs:annotation>
            <xs:documentation> Informaci√≥n t√©cnica detallada del procesamiento de cada documento.
                Complementa el estado general con c√≥digos y mensajes espec√≠ficos. </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <!-- C√≥digo de resultado espec√≠fico -->
            <xs:element name="dCodRes" type="tCodigoResultadoDocumento">
                <xs:annotation>
                    <xs:documentation> C√≥digo t√©cnico espec√≠fico del resultado del procesamiento del
                        documento. C√ìDIGOS DE DOCUMENTOS APROBADOS: ‚úÖ 0260: "Autorizaci√≥n del DE
                        satisfactoria" - Estado: "Aprobado" - Descripci√≥n: Documento completamente
                        v√°lido - Protocolo: Presente - Frecuencia: 85-90% de documentos - Acci√≥n:
                        Ninguna, documento listo para uso C√ìDIGOS DE DOCUMENTOS APROBADOS CON
                        OBSERVACI√ìN: ‚ö†Ô∏è 1005: "Transmisi√≥n extempor√°nea del DE" - Estado: "Aprobado
                        con Observaci√≥n" - Descripci√≥n: Enviado despu√©s de 72 horas de emisi√≥n -
                        Protocolo: Presente (documento autorizado) - L√≠mite: Hasta 720 horas (30
                        d√≠as) despu√©s de emisi√≥n - Acci√≥n: Revisar procesos para env√≠o oportuno
                        C√ìDIGOS DE DOCUMENTOS RECHAZADOS (1000-4999): ERRORES DE ESTRUCTURA Y CDC
                        (1000-1099): ‚ùå 1000: "CDC no correspondiente con XML" - Causa: CDC calculado
                        incorrectamente - Soluci√≥n: Verificar algoritmo de generaci√≥n de CDC ‚ùå 1001:
                        "CDC duplicado" - Causa: Documento con CDC ya procesado anteriormente -
                        Soluci√≥n: Verificar unicidad y secuencia de documentos ‚ùå 1002: "Error en
                        datos obligatorios" - Causa: Campos requeridos faltantes o inv√°lidos -
                        Soluci√≥n: Revisar completitud de datos obligatorios ERRORES DE VALIDACI√ìN DE
                        NEGOCIO (2000-2999): ‚ùå 2001: "RUC del emisor no autorizado para emisi√≥n" -
                        Causa: RUC no habilitado para documentos electr√≥nicos - Soluci√≥n: Verificar
                        habilitaci√≥n en SET ‚ùå 2002: "Timbrado inv√°lido o vencido" - Causa: Timbrado
                        no vigente en fecha de emisi√≥n - Soluci√≥n: Solicitar nuevo timbrado en SET ‚ùå
                        2003: "Numeraci√≥n fuera de secuencia" - Causa: N√∫mero de documento no
                        consecutivo - Soluci√≥n: Verificar secuencia de numeraci√≥n ERRORES DE
                        C√ÅLCULOS (3000-3999): ‚ùå 3001: "Error en c√°lculo de totales" - Causa: Suma de
                        √≠tems no coincide con total declarado - Soluci√≥n: Verificar f√≥rmulas de
                        c√°lculo ‚ùå 3002: "Error en c√°lculo de IVA" - Causa: IVA calculado
                        incorrectamente - Soluci√≥n: Revisar aplicaci√≥n de al√≠cuotas de IVA ERRORES
                        DE C√ìDIGOS DE CAT√ÅLOGO (4000-4999): ‚ùå 4001: "C√≥digo de moneda inv√°lido" -
                        Causa: Moneda no reconocida por sistema - Soluci√≥n: Usar c√≥digos ISO 4217
                        v√°lidos ‚ùå 4002: "C√≥digo de tipo de documento inv√°lido" - Causa: Tipo de
                        documento no v√°lido - Soluci√≥n: Verificar cat√°logo de tipos de documento
                        ESTRATEGIA DE MANEJO POR RANGO: ```python def
                        manejar_codigo_resultado(codigo): codigo_num = int(codigo) if codigo ==
                        "0260": return {"tipo": "exito", "accion": "continuar"} elif 1000 (mayor
                        igual) codigo_num (mayor igual) 1099: return {"tipo": "error_estructura",
                        "accion": "corregir_formato"} elif 2000 (mayor igual) codigo_num (mayor
                        igual) 2999: return {"tipo": "error_negocio", "accion":
                        "revisar_habilitacion"} elif 3000 (mayor igual) codigo_num (mayor igual)
                        3999: return {"tipo": "error_calculo", "accion": "verificar_matematicas"}
                        elif 4000 (mayor igual) codigo_num (mayor igual) 4999: return {"tipo":
                        "error_catalogo", "accion": "verificar_codigos"} else: return {"tipo":
                        "error_desconocido", "accion": "escalar_soporte"} ``` </xs:documentation>
                </xs:annotation>
            </xs:element>

            <!-- Mensaje descriptivo del resultado -->
            <xs:element name="dMsgRes" type="tMensajeResultadoDocumento">
                <xs:annotation>
                    <xs:documentation> Mensaje descriptivo t√©cnico del resultado del procesamiento.
                        CARACTER√çSTICAS: - Idioma: Espa√±ol (Paraguay) - Nivel: T√©cnico (para
                        desarrolladores y sistemas) - Detalle: Espec√≠fico del error o resultado -
                        Longitud: Variable, m√°ximo 500 caracteres EJEMPLOS POR TIPO DE RESULTADO:
                        MENSAJES DE √âXITO: ‚úÖ "Autorizaci√≥n del DE satisfactoria" ‚úÖ "Documento
                        electr√≥nico autorizado correctamente" MENSAJES DE OBSERVACI√ìN: ‚ö†Ô∏è
                        "Transmisi√≥n extempor√°nea del DE" ‚ö†Ô∏è "Documento enviado fuera del plazo
                        establecido" MENSAJES DE ERROR ESPEC√çFICOS: ‚ùå "CDC no correspondiente con
                        XML" ‚ùå "El CDC calculado no coincide con el contenido del documento" ‚ùå
                        "Campo dRucEmi es obligatorio y no est√° presente" ‚ùå "Timbrado n√∫mero
                        12345678 vencido el 2024-01-15" ‚ùå "Total general calculado: 110000,
                        declarado: 100000" ‚ùå "IVA 10% sobre 100000 debe ser 10000, encontrado 9000"
                        MENSAJES CON CONTEXTO ADICIONAL: - "Error en √≠tem 3: c√≥digo de producto
                        inv√°lido 'ABC123'" - "RUC emisor 12345678-9 no habilitado para facturaci√≥n
                        electr√≥nica" - "Documento n√∫mero 0000001 ya fue procesado el 2024-12-15" USO
                        EN APLICACIONES: PARA DESARROLLADORES: ‚úÖ Incluir en logs t√©cnicos ‚úÖ Mostrar
                        en consolas de debugging ‚úÖ Usar para an√°lisis de causas ra√≠z ‚úÖ Incluir en
                        reportes de errores PARA USUARIOS FINALES: ‚ö†Ô∏è Puede ser muy t√©cnico para
                        usuarios no t√©cnicos ‚ö†Ô∏è Traducir a lenguaje m√°s amigable si es necesario ‚ö†Ô∏è
                        Complementar con gu√≠as de soluci√≥n PARSING Y AN√ÅLISIS: ‚ùå No parsear
                        program√°ticamente (formato puede cambiar) ‚ùå No usar para l√≥gica condicional
                        ‚úÖ Usar dCodRes para decisiones program√°ticas ‚úÖ Usar dMsgRes para informaci√≥n
                        contextual EJEMPLO DE PROCESAMIENTO: ```python def
                        procesar_mensaje_error(codigo, mensaje): # Usar c√≥digo para l√≥gica if codigo
                        == "3001": return { "categoria": "error_calculo", "severidad": "alta",
                        "accion_recomendada": "revisar_totales" } # Usar mensaje para contexto
                        humano return { "mensaje_tecnico": mensaje, "mensaje_usuario":
                        traducir_a_lenguaje_amigable(mensaje), "documentacion":
                        obtener_link_ayuda(codigo) } ``` </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!--
        ================================================================
        TIPOS B√ÅSICOS Y RESTRICCIONES
        ================================================================
    -->

    <!-- Fecha y hora de procesamiento final -->
    <xs:simpleType name="tFechaProcesamiento">
        <xs:annotation>
            <xs:documentation> Timestamp de finalizaci√≥n del procesamiento del lote por SIFEN.
                INTERPRETACI√ìN SEG√öN ESTADO DEL LOTE: Estado 0360 (En procesamiento): - Representa
                timestamp de la consulta actual - Se actualiza en cada consulta mientras procesa -
                NO es el timestamp final de procesamiento Estado 0361/0362 (Finalizado): -
                Representa timestamp real de finalizaci√≥n - Es fijo y no cambia en consultas
                posteriores - Marca el momento de decisi√≥n final sobre todos los documentos ZONA
                HORARIA: - Paraguay: Am√©rica/Asuncion - Horario est√°ndar: UTC-3 - Horario de verano:
                UTC-4 (cuando aplique) SLA Y PERFORMANCE: - Objetivo: (mayor) 15 minutos desde
                recepci√≥n - Cr√≠tico: (mayor) 20 minutos para lotes complejos - Timeout: (menor) 30
                minutos requiere escalaci√≥n </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:dateTime" />
    </xs:simpleType>

    <!-- C√≥digo de resultado del lote -->
    <xs:simpleType name="tCodigoResultadoLote">
        <xs:annotation>
            <xs:documentation> C√≥digo de 4 d√≠gitos que indica el estado del procesamiento del lote
                completo. PATR√ìN: 036x para procesamiento de lotes - 0360: En procesamiento - 0361:
                Finalizado con errores - 0362: Finalizado exitosamente VALIDACI√ìN: - Exactamente 4
                d√≠gitos num√©ricos - Rango v√°lido: 0360-0362 para lotes - Otros c√≥digos pueden
                indicar errores sist√©micos </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{4}">
                <xs:annotation>
                    <xs:documentation>4 d√≠gitos num√©ricos exactos</xs:documentation>
                </xs:annotation>
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <!-- Mensaje de resultado del lote -->
    <xs:simpleType name="tMensajeResultadoLote">
        <xs:annotation>
            <xs:documentation> Mensaje descriptivo del estado del lote en espa√±ol. M√°ximo 500
                caracteres, preservando espacios en blanco. </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:maxLength value="500" />
            <xs:whiteSpace value="preserve" />
        </xs:restriction>
    </xs:simpleType>

    <!-- CDC del documento -->
    <xs:simpleType name="tCDCDocumento">
        <xs:annotation>
            <xs:documentation> C√≥digo de Control del Documento de exactamente 44 d√≠gitos num√©ricos.
                VALIDACI√ìN ESTRICTA: - Exactamente 44 caracteres - Solo d√≠gitos num√©ricos (0-9) -
                Sin espacios, guiones o caracteres especiales - Debe coincidir con CDC del documento
                original del lote ALGORITMO DE VALIDACI√ìN: ```python def validar_cdc(cdc): if
                len(cdc) != 44: raise ValueError("CDC debe tener exactamente 44 d√≠gitos") if not
                cdc.isdigit(): raise ValueError("CDC debe contener solo d√≠gitos") # Validaciones
                adicionales del algoritmo CDC return validar_algoritmo_cdc_completo(cdc) ``` </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{44}">
                <xs:annotation>
                    <xs:documentation>Exactamente 44 d√≠gitos num√©ricos consecutivos</xs:documentation>
                </xs:annotation>
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <!-- Estado del resultado del documento -->
    <xs:simpleType name="tEstadoResultado">
        <xs:annotation>
            <xs:documentation> Estado final del procesamiento del documento individual. VALORES
                PERMITIDOS: - "Aprobado": Documento completamente v√°lido - "Aprobado con
                Observaci√≥n": V√°lido pero con advertencias - "Rechazado": No v√°lido, requiere
                correcci√≥n VALORES ADICIONALES (contextos especiales): - "Cancelado": Cancelado por
                evento posterior - "Anulado": Anulado por evento posterior NOTA: Estados "Cancelado"
                y "Anulado" son poco comunes en respuestas de lotes iniciales, m√°s t√≠picos en
                consultas de documentos procesados anteriormente. </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:enumeration value="Aprobado">
                <xs:annotation>
                    <xs:documentation>Documento completamente v√°lido y autorizado</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Aprobado con Observaci√≥n">
                <xs:annotation>
                    <xs:documentation>Documento autorizado pero con observaciones menores</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Rechazado">
                <xs:annotation>
                    <xs:documentation>Documento no v√°lido, no autorizado</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Cancelado">
                <xs:annotation>
                    <xs:documentation>Documento cancelado por evento posterior</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Anulado">
                <xs:annotation>
                    <xs:documentation>Documento anulado por evento posterior</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Protocolo de autorizaci√≥n -->
    <xs:simpleType name="tProtocoloAutorizacion">
        <xs:annotation>
            <xs:documentation> N√∫mero de protocolo de autorizaci√≥n de exactamente 10 d√≠gitos.
                CARACTER√çSTICAS: - Solo presente en documentos aprobados - √önico a nivel nacional
                por SIFEN - Inmutable una vez asignado - Referencia oficial del documento autorizado
                ESTRUCTURA (informativa): AAAADDDSSS donde: - AAAA: A√±o (4 d√≠gitos) - DDD: D√≠a del
                a√±o 001-366 (3 d√≠gitos) - SSS: Secuencial del d√≠a (3 d√≠gitos) VALIDACI√ìN: -
                Exactamente 10 d√≠gitos num√©ricos - No puede ser todo ceros: 0000000000 - Solo
                almacenar como string (evitar overflow num√©rico) </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{10}">
                <xs:annotation>
                    <xs:documentation>Exactamente 10 d√≠gitos num√©ricos</xs:documentation>
                </xs:annotation>
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <!-- C√≥digo de resultado del documento -->
    <xs:simpleType name="tCodigoResultadoDocumento">
        <xs:annotation>
            <xs:documentation> C√≥digo t√©cnico espec√≠fico del resultado del documento individual.
                RANGOS DE C√ìDIGOS: - 0260: Aprobaci√≥n exitosa - 1000-1999: Errores de estructura y
                formato - 2000-2999: Errores de validaci√≥n de negocio - 3000-3999: Errores de
                c√°lculos matem√°ticos - 4000-4999: Errores de c√≥digos de cat√°logo - 5000+: Errores de
                sistema PATR√ìN: 4 d√≠gitos num√©ricos exactos </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{4}">
                <xs:annotation>
                    <xs:documentation>4 d√≠gitos num√©ricos exactos</xs:documentation>
                </xs:annotation>
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <!-- Mensaje de resultado del documento -->
    <xs:simpleType name="tMensajeResultadoDocumento">
        <xs:annotation>
            <xs:documentation> Mensaje descriptivo t√©cnico del resultado del documento. M√°ximo 500
                caracteres en espa√±ol, con espacios preservados. Puede incluir informaci√≥n
                espec√≠fica del error o contexto adicional. </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:maxLength value="500" />
            <xs:whiteSpace value="preserve" />
        </xs:restriction>
    </xs:simpleType>

    <!--
        ================================================================
        DOCUMENTACI√ìN ADICIONAL - EJEMPLOS COMPLETOS
        ================================================================
    -->

    <xs:annotation>
        <xs:documentation> ================================================================ EJEMPLOS
            COMPLETOS DE RESPUESTAS POR ESCENARIO
            ================================================================ ESCENARIO 1: Lote en
            procesamiento (sin resultados a√∫n)
            ====================================================== <rResEnviConsLoteDe
                xmlns="http://ekuatia.set.gov.py/sifen/xsd">
                <dFecProc>2024-12-20T14:45:00</dFecProc>
                <dCodResLot>0360</dCodResLot>
                <dMsgResLot>Lote en procesamiento</dMsgResLot>
                <!-- Sin elementos gResProcLote -->
            </rResEnviConsLoteDe> ‚û§
            Acci√≥n: Esperar 2-3 minutos y consultar nuevamente ESCENARIO 2: Lote procesado
            exitosamente (todos aprobados) ========================================================= <rResEnviConsLoteDe
                xmlns="http://ekuatia.set.gov.py/sifen/xsd">
                <dFecProc>2024-12-20T14:50:00</dFecProc>
                <dCodResLot>0362</dCodResLot>
                <dMsgResLot>Procesamiento finalizado exitosamente</dMsgResLot>

                <!-- Documento 1: Aprobado -->
                <gResProcLote>
                    <id>12345678901200100000001100120241220010001</id>
                    <dEstRes>Aprobado</dEstRes>
                    <dProtAut>2024355001</dProtAut>
                    <gResProc>
                        <dCodRes>0260</dCodRes>
                        <dMsgRes>Autorizaci√≥n del DE satisfactoria</dMsgRes>
                    </gResProc>
                </gResProcLote>

                <!-- Documento 2: Aprobado -->
                <gResProcLote>
                    <id>12345678901200100000002100120241220010002</id>
                    <dEstRes>Aprobado</dEstRes>
                    <dProtAut>2024355002</dProtAut>
                    <gResProc>
                        <dCodRes>0260</dCodRes>
                        <dMsgRes>Autorizaci√≥n del DE satisfactoria</dMsgRes>
                    </gResProc>
                </gResProcLote>

            </rResEnviConsLoteDe>
            ‚û§ Acci√≥n: Todos los documentos aprobados, procesar √©xito completo ESCENARIO 3: Lote con
            resultados mixtos (algunos rechazados)
            =========================================================== <rResEnviConsLoteDe
                xmlns="http://ekuatia.set.gov.py/sifen/xsd">
                <dFecProc>2024-12-20T14:52:00</dFecProc>
                <dCodResLot>0361</dCodResLot>
                <dMsgResLot>Procesamiento finalizado con errores</dMsgResLot>

                <!-- Documento 1: Aprobado -->
                <gResProcLote>
                    <id>12345678901200100000001100120241220010001</id>
                    <dEstRes>Aprobado</dEstRes>
                    <dProtAut>2024355001</dProtAut>
                    <gResProc>
                        <dCodRes>0260</dCodRes>
                        <dMsgRes>Autorizaci√≥n del DE satisfactoria</dMsgRes>
                    </gResProc>
                </gResProcLote>

                <!-- Documento 2: Aprobado con Observaci√≥n -->
                <gResProcLote>
                    <id>12345678901200100000002100120241218010002</id>
                    <dEstRes>Aprobado con Observaci√≥n</dEstRes>
                    <dProtAut>2024355002</dProtAut>
                    <gResProc>
                        <dCodRes>1005</dCodRes>
                        <dMsgRes>Transmisi√≥n extempor√°nea del DE</dMsgRes>
                    </gResProc>
                </gResProcLote>

                <!-- Documento 3: Rechazado -->
                <gResProcLote>
                    <id>12345678901200100000003100120241220010003</id>
                    <dEstRes>Rechazado</dEstRes>
                    <!-- Sin dProtAut -->
                    <gResProc>
                        <dCodRes>1001</dCodRes>
                        <dMsgRes>CDC duplicado</dMsgRes>
                    </gResProc>
                </gResProcLote>

                <!-- Documento 4: Rechazado -->
                <gResProcLote>
                    <id>12345678901200100000004100120241220010004</id>
                    <dEstRes>Rechazado</dEstRes>
                    <!-- Sin dProtAut -->
                    <gResProc>
                        <dCodRes>3001</dCodRes>
                        <dMsgRes>Error en c√°lculo de totales</dMsgRes>
                    </gResProc>
                </gResProcLote>

            </rResEnviConsLoteDe>
            ‚û§ Resultado: 1 aprobado, 1 aprobado con observaci√≥n, 2 rechazados ‚û§ Acci√≥n: Procesar
            aprobados, corregir y reenviar rechazados
            ================================================================ ALGORITMO COMPLETO DE
            PROCESAMIENTO ================================================================ ```python
            def procesar_respuesta_completa_lote(response): \"\"\" Procesamiento completo de
            respuesta de consulta de lote \"\"\" resultado = { "estado_lote": response.dCodResLot,
            "mensaje_lote": response.dMsgResLot, "fecha_procesamiento": response.dFecProc,
            "estadisticas": { "total": 0, "aprobados": 0, "aprobados_observacion": 0, "rechazados":
            0 }, "documentos": { "aprobados": [], "observaciones": [], "rechazados": [] },
            "acciones_requeridas": [] } # Verificar estado del lote if response.dCodResLot ==
            "0360": resultado["acciones_requeridas"].append({ "tipo": "esperar", "descripcion":
            "Lote a√∫n en procesamiento", "siguiente_consulta": "2-3 minutos" }) return resultado #
            Procesar documentos individuales if hasattr(response, 'gResProcLote'): for doc in
            response.gResProcLote: doc_info = { "cdc": doc.id, "estado": doc.dEstRes, "codigo":
            doc.gResProc.dCodRes, "mensaje": doc.gResProc.dMsgRes, "protocolo": getattr(doc,
            'dProtAut', None) } resultado["estadisticas"]["total"] += 1 if doc.dEstRes ==
            "Aprobado": resultado["estadisticas"]["aprobados"] += 1
            resultado["documentos"]["aprobados"].append(doc_info) elif doc.dEstRes == "Aprobado con
            Observaci√≥n": resultado["estadisticas"]["aprobados_observacion"] += 1
            resultado["documentos"]["observaciones"].append(doc_info)
            resultado["acciones_requeridas"].append({ "tipo": "revisar_observacion", "documento":
            doc.id, "descripcion": doc.gResProc.dMsgRes }) elif doc.dEstRes == "Rechazado":
            resultado["estadisticas"]["rechazados"] += 1
            resultado["documentos"]["rechazados"].append(doc_info)
            resultado["acciones_requeridas"].append({ "tipo": "corregir_documento", "documento":
            doc.id, "error": doc.gResProc.dMsgRes, "codigo_error": doc.gResProc.dCodRes }) #
            Determinar estado final del procesamiento if resultado["estadisticas"]["rechazados"] ==
            0: resultado["resultado_final"] = "exito_completo" elif
            resultado["estadisticas"]["aprobados"] > 0: resultado["resultado_final"] =
            "exito_parcial" else: resultado["resultado_final"] = "fallo_completo" return resultado
            def generar_reporte_lote(resultado): \"\"\" Generar reporte ejecutivo del procesamiento
            del lote \"\"\" total = resultado["estadisticas"]["total"] aprobados =
            resultado["estadisticas"]["aprobados"] observaciones =
            resultado["estadisticas"]["aprobados_observacion"] rechazados =
            resultado["estadisticas"]["rechazados"] if total == 0: return "Lote a√∫n en
            procesamiento" tasa_exito = ((aprobados + observaciones) / total) * 100 reporte =
            f\"\"\" REPORTE DE PROCESAMIENTO DE LOTE =============================== Estado del
            lote: {resultado["estado_lote"]} Fecha de procesamiento:
            {resultado["fecha_procesamiento"]} ESTAD√çSTICAS: - Total de documentos: {total} -
            Aprobados: {aprobados} ({(aprobados/total)*100:.1f}%) - Aprobados con observaci√≥n:
            {observaciones} ({(observaciones/total)*100:.1f}%) - Rechazados: {rechazados}
            ({(rechazados/total)*100:.1f}%) - Tasa de √©xito: {tasa_exito:.1f}% RESULTADO FINAL:
            {resultado["resultado_final"].upper()} ACCIONES PENDIENTES:
            {len(resultado["acciones_requeridas"])} \"\"\" return reporte ```
            ================================================================ MEJORES PR√ÅCTICAS PARA
            IMPLEMENTACI√ìN ================================================================ 1.
            MANEJO DE ESTADOS: - Implementar m√°quina de estados para tracking - Usar enum para
            estados bien definidos - Validar transiciones v√°lidas de estados 2. PERSISTENCIA: -
            Almacenar todos los resultados para auditor√≠a - Indexar por CDC para b√∫squedas r√°pidas -
            Mantener hist√≥rico de consultas 3. MONITOREO: - Alertas para lotes que tardan > 20
            minutos - M√©tricas de tasa de √©xito por per√≠odo - Dashboard con estado en tiempo real 4.
            RECOVERY: - Implementar retry logic para consultas fallidas - Manejar timeouts y
            reconexiones autom√°ticas - Backup de datos cr√≠ticos antes de reenv√≠os 5. INTEGRACI√ìN: -
            Mapear c√≥digos SIFEN a estados internos - Sincronizar con sistemas ERP/contables -
            Notificaciones autom√°ticas a usuarios finales 6. TESTING: - Mock responses para
            diferentes escenarios - Tests de carga con lotes de 50 documentos - Validaci√≥n de todos
            los c√≥digos de error ================================================================
            C√ìDIGOS DE ERROR DETALLADOS Y SOLUCIONES
            ================================================================ ERRORES DE ESTRUCTURA
            (1000-1099): 1000: "CDC no correspondiente con XML" ‚û§ Causa: Algoritmo de CDC incorrecto
            ‚û§ Soluci√≥n: Verificar implementaci√≥n del algoritmo de CDC ‚û§ Verificar: RUC,
            establecimiento, punto expedici√≥n, n√∫mero doc 1001: "CDC duplicado" ‚û§ Causa: Documento
            ya procesado anteriormente ‚û§ Soluci√≥n: Verificar base de datos de documentos enviados ‚û§
            Verificar: Secuencia de numeraci√≥n √∫nica 1002: "Error en datos obligatorios" ‚û§ Causa:
            Campos requeridos faltantes o formato incorrecto ‚û§ Soluci√≥n: Validar contra schema
            DE_v150.xsd ‚û§ Verificar: Completitud de todos los campos obligatorios ERRORES DE NEGOCIO
            (2000-2999): 2001: "RUC del emisor no autorizado para emisi√≥n" ‚û§ Causa: RUC no
            habilitado para documentos electr√≥nicos ‚û§ Soluci√≥n: Solicitar habilitaci√≥n en SET ‚û§
            Verificar: Estado del RUC en portal ekuatia.set.gov.py 2002: "Timbrado inv√°lido o
            vencido" ‚û§ Causa: Timbrado no vigente en fecha de emisi√≥n ‚û§ Soluci√≥n: Solicitar nuevo
            timbrado v√°lido ‚û§ Verificar: Fechas de vigencia del timbrado 2003: "Numeraci√≥n fuera de
            secuencia" ‚û§ Causa: Salto en numeraci√≥n de documentos ‚û§ Soluci√≥n: Verificar secuencia
            consecutiva ‚û§ Verificar: √öltimo n√∫mero enviado vs actual ERRORES DE C√ÅLCULO (3000-3999):
            3001: "Error en c√°lculo de totales" ‚û§ Causa: Suma de √≠tems ‚â† total declarado ‚û§ Soluci√≥n:
            Verificar f√≥rmulas de c√°lculo ‚û§ Verificar: Suma de (cantidad √ó precio) por √≠tem 3002:
            "Error en c√°lculo de IVA" ‚û§ Causa: IVA calculado incorrectamente ‚û§ Soluci√≥n: Revisar
            aplicaci√≥n de al√≠cuotas ‚û§ Verificar: 10% sobre gravado, 5% sobre m√≠nimo ERRORES DE
            CAT√ÅLOGO (4000-4999): 4001: "C√≥digo de moneda inv√°lido" ‚û§ Causa: Moneda no reconocida ‚û§
            Soluci√≥n: Usar c√≥digos ISO 4217 v√°lidos ‚û§ Verificar: PYG (600), USD (840), EUR (978)
            4002: "C√≥digo de tipo de documento inv√°lido" ‚û§ Causa: Tipo no v√°lido en cat√°logo SET ‚û§
            Soluci√≥n: Verificar cat√°logo oficial ‚û§ Verificar: 1=FE, 4=AFE, 5=NCE, 6=NDE, 7=NRE
            ================================================================ PERFORMANCE Y
            OPTIMIZACI√ìN ================================================================ M√âTRICAS
            CLAVE: - Tiempo de procesamiento promedio: (mayor) 10 minutos - Tasa de √©xito de lotes:
            (menor) 95% - Tiempo de respuesta de consultas: (mayor) 5 segundos - Disponibilidad del
            servicio: (menor) 99.5% OPTIMIZACIONES RECOMENDADAS: 1. CACHING INTELIGENTE: ```python #
            Cache de resultados finales (inmutable) cache_resultados_finales = {} def
            consultar_con_cache(protocolo_lote): if protocolo_lote in cache_resultados_finales:
            return cache_resultados_finales[protocolo_lote] resultado =
            consultar_sifen(protocolo_lote) # Solo cachear resultados finales if
            resultado.dCodResLot in ["0361", "0362"]: cache_resultados_finales[protocolo_lote] =
            resultado return resultado ``` 2. POOLING DE CONEXIONES: ```python # Pool de conexiones
            para consultas concurrentes connection_pool = ConnectionPool( max_connections=10,
            timeout=30, retry_policy=ExponentialBackoff() ) ``` 3. CONSULTAS BATCH: ```python #
            Consultar m√∫ltiples lotes en paralelo async def consultar_lotes_paralelo(protocolos):
            tasks = [consultar_lote_async(p) for p in protocolos] return await
            asyncio.gather(*tasks) ``` 4. RATE LIMITING: ```python # Limitar consultas para evitar
            sobrecarga rate_limiter = RateLimiter( max_requests=60, # 60 consultas time_window=60 #
            por minuto ) ``` ================================================================
            MONITOREO Y ALERTAS ================================================================
            DASHBOARDS RECOMENDADOS: 1. ESTADO EN TIEMPO REAL: - Lotes en procesamiento actualmente
            - Tiempo promedio de procesamiento hoy - Distribuci√≥n de estados de documentos - C√≥digos
            de error m√°s frecuentes 2. TENDENCIAS HIST√ìRICAS: - Tasa de √©xito por d√≠a/semana/mes -
            Tiempo de procesamiento promedio - Volumen de lotes procesados - Comparaci√≥n con
            per√≠odos anteriores 3. ALERTAS OPERACIONALES: - Lote tard√≥ > 20 minutos en procesarse -
            Tasa de error > 10% en √∫ltima hora - Servicio SIFEN no disponible - Protocolos
            duplicados detectados M√âTRICAS SLA: ```python SLA_METRICS = {
            "tiempo_procesamiento_objetivo": 15 * 60, # 15 minutos "tiempo_procesamiento_critico":
            20 * 60, # 20 minutos "tasa_exito_minima": 0.95, # 95% "disponibilidad_minima": 0.995, #
            99.5% "tiempo_respuesta_consulta": 5 # 5 segundos } ```
            ================================================================ CONSIDERACIONES DE
            SEGURIDAD ================================================================ 1.
            AUTENTICACI√ìN: - Certificados PSC v√°lidos y vigentes - Validaci√≥n de cadena de
            certificados - Renovaci√≥n autom√°tica antes de vencimiento 2. INTEGRIDAD: - Validaci√≥n de
            firmas digitales en responses - Verificaci√≥n de checksums de mensajes - Detecci√≥n de
            modificaciones en tr√°nsito 3. CONFIDENCIALIDAD: - TLS 1.2 m√≠nimo para todas las
            conexiones - Cifrado de datos sensibles en logs - Segregaci√≥n de ambientes (test/prod)
            4. AUDITOR√çA: - Log completo de todas las transacciones - Trazabilidad de cambios de
            estado - Retenci√≥n de logs seg√∫n regulaciones
            ================================================================ TROUBLESHOOTING GUIDE
            ================================================================ PROBLEMA: Lote tarda
            m√°s de 20 minutos ‚û§ Verificar: Estado del servicio SIFEN ‚û§ Acci√≥n: Consultar portal SET
            para mantenimientos ‚û§ Escalaci√≥n: Contactar soporte t√©cnico SET PROBLEMA: Muchos
            documentos rechazados ‚û§ Verificar: C√≥digos de error m√°s frecuentes ‚û§ Acci√≥n: Revisar
            proceso de generaci√≥n/validaci√≥n ‚û§ Escalaci√≥n: Analizar datos de entrada PROBLEMA:
            Protocolos duplicados ‚û§ Verificar: Unicidad en base de datos local ‚û§ Acci√≥n: Revisar
            algoritmo de generaci√≥n CDC ‚û§ Escalaci√≥n: Verificar sincronizaci√≥n de secuencias
            PROBLEMA: Consultas devuelven error ‚û§ Verificar: Conectividad y certificados ‚û§ Acci√≥n:
            Validar formato de protocolos ‚û§ Escalaci√≥n: Revisar logs de red y TLS </xs:documentation>
    </xs:annotation>

</xs:schema>